<div class="mypage-header">
  <div class="user-profile">
    <div class="users-info">
      <div class="users-avatar-image">
        <% if @user.avatar_image.attached? %>
          <%= image_tag @user.avatar_image %>
        <% else %>
          <%= image_tag "free_images/user_icon_4.png" %>
        <% end %>
      </div>
      <div class="users-name">
        <%= @user.user_name %>
      </div>
      <div class="setting">
        <% if current_user&.id == @user.id %>
          <%= link_to "プロフィールを編集", edit_user_path(@user), id: "users-setting" %>
        <% end %>
      </div>
    </div>
    <div class="users-intro" id="users-intro">
      <%= @user.profile %>
    </div>
  </div>
  <div class="most-frequent-comment">
    <p>サービスクラスでコメントを集計し分析。時間がかかるようなら1日１回か２回実行し、決まった時間に更新する最も多くコメントされたフレーズ（3種類）　件数</p>
  </div>
</div> <!-- 右寄せ　-->

<script>
  document.addEventListener("turbo:load", function () {
    const usersIntro = document.getElementById("users-intro");
    const usersSetting = document.getElementById("users-setting");
    const userSettingLink = document.getElementById("users-setting");
    const settingContainer = userSettingLink?.parentElement;

    if (usersIntro) {
      const introText = usersIntro.textContent.trim(); ;
      if (introText.length > 0) {
        usersIntro.style.borderBottom = "2px solid #ddd";
      } else {
      usersIntro.style.borderBottom = "none";
      };
    };
    
    if (userSettingLink && settingContainer) {
      settingContainer.classList.add("active");
    };
  });

</script>

<style>
* {
    /*outline: 2px solid blue;*/
    scrollbar-width: none;
  }
</style>

<style>
.mypage-header {
  display: flex; /* Flexbox を有効化 */
  justify-content: space-between; /* コンテナ内のスペースを均等配置 */
  align-items: center; /* 垂直方向を中央揃え */
  gap: 20px; /* 要素間の間隔を設定 */
  padding: 20px 15%;
  padding-bottom: 20px;
  margin: auto;
  text-align: center;
  border: 3px solid #ddd;
}
@media (max-width: 900px){
  .mypage-header {
   flex-direction: column;
  }  
}
@media (max-width: 1500px){
  .user-profile {
   flex-direction: column;
  }  
}
.user-profile {
  padding-left: 20px;
  display: flex;
  justify-content: space-between; /* コンテナ内のスペースを均等配置 */
  align-items: center; /* 垂直方向を中央揃え */
  width: 60%;
}
.users-info {
  display: flex;
  flex-direction: column;
  justify-content: space-between; /* コンテナ内のスペースを均等配置 */
  align-items: center; /* 垂直方向を中央揃え */
  margin: 20px
}
.users-avatar-image {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 200px;
  height: 200px;
  overflow: hidden;
  border-radius: 50%;
}
.users-avatar-image img {
  object-fit: contain;
  max-width: 200px;
  max-height: 200px;
  margin: auto; 
  display: block;
}
.users-info .setting {
  border-radius: 20px;
  padding: 5px;
}
.users-info .setting.active {
  background: #ddd;
}
.users-info .setting a {
  text-decoration: none;
  color: black;
}
.users-intro {
  display: flex;
  flex-direction: column;
  justify-content: space-between; /* コンテナ内のスペースを均等配置 */
  align-items: center; /* 垂直方向を中央揃え */
  word-wrap: break-word; /* 長い単語で適宜改行 */
  word-break: break-word; /* 必要に応じて単語を分割して改行 */
  overflow: hidden; /* はみ出た部分を隠す */
  flex-wrap: wrap;
  padding: 20px;
  margin: auto;
  max-width: 400px;
  
}
.users-name {
  max-width: 300px;
  font-size: 30px;
  word-wrap: break-word; /* 長い単語で適宜改行 */
  word-break: break-word; /* 必要に応じて単語を分割して改行 */
 
}
.most-frequent-comment {
  flex: 1;
  border: 2px solid #ddd;
  padding-right: 20px;
}
</style>
