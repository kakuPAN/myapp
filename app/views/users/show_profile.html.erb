<div class="user-wrapper">
  <div class="users-profile-wrapper">
    <div class="user-content avatar-container">
      <div class="avatar">
        <% if @user.avatar_image.attached? %>
          <%= image_tag @user.avatar_image %>
        <% else %>
          <%= image_tag "free_images/user_icon_4.png" %>
        <% end %>
      </div>
      <div class="edit">
        <div>プロフィール画像</div>
      </div>
    </div>
    <div class="user-content user-name-container">
      <div class="user-name">
        <%= @user.user_name %>
      </div>
      <div class="edit">
        <div>ユーザーネーム</div>
      </div>
    </div>
    <div class="user-content profile-container">
      <div class="profile">
        <%= @user.profile %>
      </div>
      <div class="edit">
        <div>自己紹介</div>
      </div>
    </div>
    <div class="edit">
      <%= link_to "プロフィールを変更", edit_user_path(@user), class: "btn btn-outline-primary" %>
    </div>
  </div>
  <div class="delete-user-container">
    <div class="delete-user-label">
      退会
    </div>
      <%= form_with(url: user_path(current_user), method: :delete, data: { turbo_confirm: '退会してよろしいですか？' }, class: "delete-user-form") do |f| %>
        <ul>
          <li>
            <label>
              <%= check_box_tag 'confirmation_1', 'yes', false, id: 'confirmation_1' %>
              退会するとコメント・お気に入りなどすべてのデータが削除されます。
            </label>
          </li>
          <li>
            <label>
              <%= check_box_tag 'confirmation_2', 'yes', false, id: 'confirmation_2' %>
              退会後のデータ復旧などは承っていませんので、ご注意ください。
            </label>
          </li>
        </ul>
        <%= f.submit '退会する', class: 'btn btn-outline-danger', disabled: true, id: 'delete-button' %>
      <% end %>
  </div>
</div>

<script>
document.addEventListener('turbo:load', () => {
  const checkbox1 = document.getElementById('confirmation_1');
  const checkbox2 = document.getElementById('confirmation_2');
  const deleteButton = document.getElementById('delete-button');

  function updateButtonState() {
    if (checkbox1.checked && checkbox2.checked) {
      deleteButton.disabled = false;
    } else {
      deleteButton.disabled = true;
    }
  }

  // チェックボックスの変更を監視
  checkbox1.addEventListener('change', updateButtonState);
  checkbox2.addEventListener('change', updateButtonState);
});


</script>
<style>
  @media(min-width: 800px){
    .user-wrapper {
      margin: 100px 20%;
      border: 2px solid #ddd;
    }
    .user-content {
      width: 400px;
    }
    .user-content.avatar-container {
      width: 400px;
    }
  }
  @media(max-width: 800px){
    .user-wrapper {
      padding: 100px 10px;
    }
    .user-content {
      width: 100%;
    }
    .user-content.avatar-container {
      width: 100%;
    }
  }
  .user-wrapper {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 30px;
    padding: 10%;
    min-width: 300px;
  }
  .users-profile-wrapper {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 30px;
    padding: 30px;
    width: 100%;
    border-bottom: 2px solid #ddd;
  }
  .user-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    border-bottom: 2px solid #ddd;
  }
  .user-content.avatar-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    height: 400px;
    
  }
  .edit {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
    padding: 10px;
    border-radius: 20px;
  }
  .edit a {
    text-decoration: none;
    color: black;
    font-size: 20px;
  }
  .delete-user-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
    padding: 10px;
    margin-top: 50px;
  }
  .delete-user-label {
    font-size: 23px;
  }
  .delete-user-container #confirmation_1, #confirmation_2 {
    cursor: pointer;
  }
  .delete-user-form input[type="submit"] {
    float: right;
  }
  .delete-user-container p {
    font-size: 23px;
  }
  .delete-user-container ul {
    list-style: none;
    padding-left: 0;
  }
  .delete-user-container li {
    text-align: left;
    font-size: 18px;
  }
  .avatar-container .avatar img {
    height: 300px;
    width: 300px;
    border-radius: 50%;
  }
  .user-name, .profile, .email {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
    min-height: 30px;
    margin: 30px 0;
    background: rgb(112, 112, 112, 0.2);
    font-size: 20px;
    border-radius: 5px;
  }
</style>