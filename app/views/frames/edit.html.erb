<div class="form-label">
  <% if  @frame_type.to_sym == :text %>
    <span>本文を追加</span>
  <% else @frame_type.to_sym == :image %>
    <span>画像を追加</span>
  <% end %>
</div>
<%= render "shared/error_messages", object: @frame %>
<div class="form-wrapper">
  <div class="form-container">
    <%= form_with model: [@board, @frame] do |f| %>
      <% if  @frame_type.to_sym == :text %>
        <div class="mb-3">
          <%= f.text_area :body, maxlength: 500, size: "10x5", class: "form-control", placeholder: "本文を入力してください", id: "frame_body", onkeyup: "ShowLength(value);" %>
          <p id="inputlength"><%= @frame.body.length %>文字/250文字</p>
      </div>
      <% elsif @frame_type.to_sym == :image %>
        <div class="mb-3">
          <%= f.file_field :image, onchange: "loadImage(this);" %>
        </div>
        <p class="image-label">設定中の画像</p>
        <div class="preset-preview-container">
          <div id="preset-post_images" style="">
            <div id="preset-preview">
              <% if @frame.image.attached? &&
                    @frame.image.attachment.blob.present? &&
                    @frame.image.attachment.blob.persisted? %>
                    <%= image_tag @frame.image %>
              <% end %>
            </div>
          </div>
        </div>
        <p class="image-label">追加した画像</p>
        <div class="preview-container">
          <div id="post_images" style="display: none;">
            <div id="preview"></div>
          </div>
        </div>
      <% end %>
      <div class="mb-3">
      <%= f.submit "作成", class: "form-control btn btn-outline-primary", id: "submit_button", disabled: @frame_type.to_sym == :text %>
      </div>
    <% end %>
  </div>
  <div class="cancel-button">
      <%= link_to "キャンセル", edit_board_path(@board),class: "cancel btn btn-outline-danger" %>
  </div>
</div>

<style>
* {
    /*outline: 2px solid blue;*/
    scrollbar-width: none;
  }
  .form-label {
    width: 100%;
    height: 100%;
    margin: 20px 0;
    text-align: center;
    background: rgba(221,221,221,0.4);
  }
  .form-label span {
    font-size: 30px;
    font-weight: bold;
    color: rgb(112, 112, 112);
  }
  .form-wrapper {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
    max-width: 700px;
    margin: 0 auto;
    min-height: 100vh;
}

.form-container, .cancel-button {
  width: 100%;
  margin: auto;
}
.form-container input, .cancel {
  font-size: 30px;
  padding: 10px 10px;
  border-radius: 20px;
  width: 50%;
  display: block;
  margin: auto;
}
#frame_image {
  display: block;
  margin: 10px 0;
  padding: 5px;
  border: 1px solid #ccc;
  border-radius: 4px;
  width: 100%;
  cursor: pointer;
  font-size: 20px;
}
.form-container textarea {
  min-height: 300px;
  height: 100%;
  resize: none;
  background: rgba(221,221,221,0.4);
  font-size: 25px;
}

.cancel-button {
  margin-top: 20px;
  text-align: center;
  width: 50%;
}

.cancel-button .cancel {
  display: block;
  width: 100%; 
  text-decoration: none;
}
</style>
<style>
.preview-container {
  display: flex;
  justify-content: center;
  align-items: center;
  max-width: 100%;
  max-height: 100%;
  border: 1px dashed #ccc;
  margin-top: 20px;
  background-color: #f8f9fa;
  overflow: hidden;
}
#post_images {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
}

#post_images img {
  max-width: 100%;
  max-height: 100%;
  margin: auto;
  object-fit: contain;  
  display: block;
}
</style>

<style>
.preset-preview-container {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
  border: 1px dashed #ccc;
  margin-top: 20px;
  background-color: #f8f9fa;
  overflow: hidden;
}

#preset-post_images {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
}
#preset-post_images img {
  max-width: 100%;
  max-height: 100%;
}
#preset-preview p {
  width:100%;
  text-align: center;
  font-size: 20px;
}
</style>

<script>
  console.log("読み込んだ");
  function loadImage(obj) {

  var allPreview = document.getElementById("post_images");
  
  var existingPreview = allPreview.querySelector("#preview");
  if (existingPreview) {
    existingPreview.remove();
  }

  var newPreview = document.createElement("div");
  newPreview.setAttribute("id", "preview");
  allPreview.style.display = "flex";
  allPreview.appendChild(newPreview);


  var fileReader = new FileReader();
  fileReader.onload = function (e) {
    var img = new Image();
    img.src = e.target.result;
    img.style.maxWidth = "100%";
    img.style.maxHeight = "100%";
    newPreview.appendChild(img);
  };

  if (obj.files && obj.files[0]) {
    fileReader.readAsDataURL(obj.files[0]);
  }
}
</script>
 
<script>
  function ShowLength(str) {
    const maxLength = 500;
    const value = str.trim()
    const inputLength = str.trim().length;
    const submitButton = document.getElementById("submit_button");

    document.getElementById("inputlength").innerHTML = `${inputLength}/${maxLength}文字`;

    if (value === "") {
        submitButton.disabled = true;
    } else {
        submitButton.disabled = false;
    }
}
</script>
