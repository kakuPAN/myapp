<div class="form-label">
  <% if  @frame.text_frame? %>
    <span>本文を追加</span>
  <% else %>
    <span>画像を追加</span>
  <% end %>
</div>
<% if @frame.image.attached? &&
      @frame.image.attachment.blob.present? &&
      @frame.image.attachment.blob.persisted? %>
  <p class="image-label">設定中の画像</p>
  <div class="preset-preview-container">
    <div id="preset-post_images" style="">
      <div id="preset-preview">
        <%= image_tag @frame.image %>
      </div>
    </div>
  </div>
<% end %>
<%= render "shared/error_messages", object: @frame %>
<div class="form-wrapper">
  <%= render "frames/edit_form", board: @board, frame: @frame %>
</div>

<style>
* {
    /*outline: 2px solid blue;*/
    scrollbar-width: none;
  }
  .form-label {
    width: 100%;
    height: 100%;
    margin: 20px 0;
    text-align: center;
    background: rgba(221,221,221,0.4);
  }
  .form-label span {
    font-size: 30px;
    font-weight: bold;
    color: rgb(112, 112, 112);
  }
  .form-wrapper {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
    max-width: 700px;
    margin: 20px auto;
  }

.form-container, .cancel-button {
  width: 100%;
  margin: auto;
}
.form-container input, .cancel {
  font-size: 30px;
  padding: 10px 10px;
  border-radius: 20px;
  width: 50%;
  display: block;
  margin: auto;
}
#frame-image {
  padding: 5px;
  border: 1px solid #ccc;
  border-radius: 5px;
  width: 100%;
  cursor: pointer;
  font-size: 20px;
}

.form-container textarea {
  min-height: 300px;
  height: 100%;
  resize: none;
  background: rgba(221,221,221,0.4);
  font-size: 25px;
}
.form-container input[type="submit"] {
  margin: 50px 0;
  width: 100%;
}
.cancel-button {
  margin-top: 20px;
  text-align: center;
  width: 300px;
}

.cancel-button .cancel {
  display: block;
  width: 100%; 
  text-decoration: none;
}
</style>
<style>
.preview-container {
  display: flex;
  justify-content: center;
  align-items: center;
  max-height: 100%;
  margin-top: 20px;
  overflow: hidden;
  margin: auto;
}
#post_images {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
}

#post_images img {
  max-width: 100%;
  max-height: 100%;
  margin: auto;
  object-fit: contain;  
  display: block;
  border: 1px dashed #ccc;
  margin-top: 20px;
}
.image-label {
  text-align: center;
  width: 300px;
  margin: auto;
  font-size: 20px;
}
</style>

<!-- 編集用　設定ずみの画像プレビュー -->
<style>
.preset-preview-container {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
  overflow: hidden;
  margin: auto;
  margin-top: 20px;
}

#preset-post_images {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
}
#preset-post_images img {
  max-width: 100%;
  max-height: 100%;
  border: 1px dashed #ccc;
  object-fit: contain;
  
}
#preset-preview p {
  width:100%;
  text-align: center;
  font-size: 20px;
}
</style>

<script>
  console.log("読み込んだ");
  function loadImage(obj) {
  const newImageLabel = document.getElementById("new-image-label");
  var allPreview = document.getElementById("post_images");
  
  var existingPreview = allPreview.querySelector("#preview");
  if (existingPreview) {
    existingPreview.remove();
  }

  var newPreview = document.createElement("div");
  newPreview.setAttribute("id", "preview");
  allPreview.style.display = "flex";
  allPreview.appendChild(newPreview);


  var fileReader = new FileReader();
  fileReader.onload = function (e) {
    var img = new Image();
    img.src = e.target.result;
    img.style.maxWidth = "100%";
    img.style.maxHeight = "100%";
    newPreview.appendChild(img);
  };

  if (obj.files && obj.files[0]) {
    fileReader.readAsDataURL(obj.files[0]);
    newImageLabel.innerHTML = "追加した画像";

  }
}
</script>
 
<script>
  function ShowLength(str) {
    const maxLength = 500;
    const value = str.trim()
    const inputLength = str.trim().length;
    const submitButton = document.getElementById("frame-submit-button");

    document.getElementById("inputlength").innerHTML = `${inputLength}/${maxLength}文字`;

    if (value === "") {
        submitButton.disabled = true;
    } else {
        submitButton.disabled = false;
    }
}
</script>
<script>
  function checkFrameImage() {
    const frameImageInput = document.getElementById("frame-image");
    const submitButton = document.getElementById("frame-submit-button");

    const isImageSelected = frameImageInput.files.length > 0;

    // 
    if (isImageSelected) {
      submitButton.disabled = false;
    } else {
      submitButton.disabled = true;
    }
  }
</script>
