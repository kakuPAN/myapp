<div class="whole-wrapper">
  <% if current_user %>
    <%= render "shared/header" %>
  <% end %>
  <div class="wrapper">
    <%= render @board %>
  </div>
  <div class="board-cards-title">
    <span classs="user-name"><i class="bi bi-emoji-sunglasses-fill"></i><%= @board.user.user_name %></span></span>
  </div>
  <div class="board-cards users-other-boards"> <!-- 同じユーザーの投稿 -->
    <% @boards.each do |board| %> 
      <%= render "users_other_board", board: board, current_board: @board %>
    <% end %>
    <% if @boards.present? && @boards.current_page %> <!-- カード用ページネーション -->
      <div class="pagination-left">
        <% if @boards.prev_page %>
          <%= link_to  url_for(page: @boards.prev_page || 1) do %>
            <i class="bi bi-arrow-left-square previous-link"></i>
          <% end %>
        <% else %>
          <i class="bi bi-arrow-left-square previous-link disabled"></i>
        <% end %>
      </div>
        <%= paginate @boards %>
      <div class="pagination-right">
        <% if @boards.next_page %>
          <%= link_to url_for(page: @boards.next_page || @boards.total_pages) do %>
            <i class="bi bi-arrow-right-square next-link"></i>
          <% end %>
        <% else %>
          <i class="bi bi-arrow-right-square next-link disabled"></i>
        <% end %>
      </div>
    <% else %>
      <p>表示するデータがありません。</p>
    <% end %>
  </div>
  <div class="board-cards-title">
    <span>おすすめの投稿一覧</span>
  </div>
  <div class="board-cards recommend-boards"> <!-- おすすめの投稿 -->
    <% @recommend_boards.each do |board| %>
      <%= render "users_other_board", board: board, current_board: @board %>
    <% end %>
  </div>
</div>

<!-- 投稿者の他の投稿表示用　--> <!-- 投稿の数が奇数の場合、余ったスペースに「リアクションの多い投稿」や「新しい投稿」などへのリンクをつけたカードを配置する-->

<!-- ユーザーコメント欄 !-->
<!-- 表示領域の幅を変更する場合には"800"も同時に変更すること!-->
<script>
  document.addEventListener("turbo:load", function () {
    const commentTrack = document.querySelector(".user-comment-track");
    const visibleWidth = commentTrack.offsetWidth;
    const userComment = document.getElementById("user-comment-body");
    const commenWidth = userComment.offsetWidth;
    const totalWidth = visibleWidth + commenWidth
    const speed = 80;
    
    let duration, endTranslate
    if (totalWidth < 800) {
      endTranslate = 800;
    } else {
      endTranslate = totalWidth;
    }
    duration = endTranslate / speed
    commentTrack.style.setProperty("--end-translate", `-${endTranslate}px`);
    commentTrack.style.setProperty("--animation-duration", `${duration}s`); //speedを一定にしてもコメントが増えるほど加速していくので、調整
    }
  );
</script>
<!-- コメント欄　!-->
<!-- 表示領域の高さを変更する場合には"500"も同時に変更すること!-->
<script>
  document.addEventListener("turbo:load", function () {
    const commentTrack = document.querySelector(".comment-track");
    const comments = document.querySelectorAll(".comment-text");
    const commentCount = comments.length;
    const totalHeight = commentTrack.offsetHeight;
    const speed = 50;
    
    let duration, endTranslate
    if (totalHeight < 400) {
      endTranslate = totalHeight + 400;
    } else {
      endTranslate = 400;
    }
    duration = endTranslate / speed
    commentTrack.style.setProperty("--end-translate", `${endTranslate}px`);
    commentTrack.style.setProperty("--animation-duration", `${duration+commentCount}s`); //speedを一定にしてもコメントが増えるほど加速していくので、調整
  }
);
</script>

<style>
<%# 全体のボーダーを表示・スクロールバーを非表示%>
* {
  /*outline: 2px solid blue;*/
  scrollbar-width: none;
}
</style>
<%# 背景 %>
<style>
  .whole-wrapper {
    background-size: auto auto;
    background-position: center;
    background-repeat: no-repeat;

    display: flex;
    flex-direction: column;
  }
</style>
<%# 投稿・コメント%>
<style>
  .wrapper {
    display: flex;
    height: 80vh;
    width: 100%;
    padding: 0 20px;
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
  .wrapper::-webkit-scrollbar {
    display:none;
  }
  .scroll-content {
    position: relative;
    flex: 5; 
    width: 100%;
    border: solid;
    border-color: pink;
    align-items: center; <%# 小要素の垂直位置を指定 %>
    display: flex;  <%# これなしではalign-itemsが解除される%>
    background-color: white;
    overflow: hidden;
  }
  .delete-edit-button {
    position: absolute;
    top: 10%;
    right: 5%;
    font-size: 30px;
  }
  .delete-edit-button a {
    text-decoration: none;
    color: pink;
    padding: 5px;
    border-radius: 10px;
  }
  .delete-button:hover,.edit-button:hover {
    font-size: 40px;
  }
  .board-body {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%,-50%); 
    <%# position: absolute;は基準点に対して、自分の左上を基軸にして移動するので、
      top, left 50%としたときの中心に来るのは自分の左上になる。translateはそれを調節する%>
  }
  .board-body a{
    text-decoration: none;
    color: black;
    font-size: 25px;
  }
  </style>
  <%# パーシャル %>
  <style>
  .board-items {
    margin: auto; <%# 要素の中央寄せ %>
  }
  .user-name {
    display: inline-block;
    margin: auto;
  }
  .board-image {
    
  }
  .board-image img { <%# これらのプロパティはimgに直接指定することに注意 %>
    max-width: 100%; <%# 100％で表示できるのは元の大きさまで %><%# クリックで100%に変更　＝＞　全体表示 %>
    max-height: 100%;<%# 小さい画像をあえてはみ出させたい場合は直接指定するしかない、比率を維持したまま親要素に合わせて自動でサイズを調整することができなくなる %>
    min-width: 100px;
    min-height: 100px;
    object-fit: cover; <%# 上記の指定だけでは比率がおかしくなるらしい（なくてもできてる感ある）%>
    border-radius: 15px 15px 15px 15px;
  }
</style>
<!-- 投稿者コメント !-->
<style>
.user-comment-area {
  width: 100%;
  overflow: hidden;
  white-space: nowrap;
  position: absolute;
  top: 0;
  background-color: pink;
  border: 5px solid white;
  margin: 0;
  padding: 0;
}
.user_page_link {
  text-decoration: none;
}
.user-comment-track {
  width: 100%;
  animation: scroll-left var(--animation-duration) linear infinite;
}
.user-comment-text {
  display: inline-block;
  margin-right: 50px; /* 各コメント間のスペース */
  font-size: 30px;
  font-weight: bold;
  color: white;
}
.board-user-name {
  font-size: 38px;
}

@keyframes scroll-left {
  from {
    transform: translateX(var(--start-translate, 100%));
  }
  to {
    transform: translateX(var(--end-translate, -200px));
  }
}
</style>

<!-- 前後の投稿への移動ボタン !-->
<style>
  .prev-board {
    position: absolute;
    left: 45%;
    bottom: 0;
    transform: translate(-50%,0); 
    
  }
  .next-board {
    position: absolute;
    right: 45%;
    bottom: 0;
    transform: translate(50%,0); 
  }
  .prev-board-link {
    font-size: 40px;
    opacity: 0;
    color: pink;
  }
  .next-board-link {
    font-size: 40px;
    opacity: 0;
    color: pink;
  }
  .scroll-content:hover  .prev-board-link:not(.disabled) {
    opacity: 1;
  }
  .scroll-content:hover .next-board-link:not(.disabled) {
    opacity: 1;
  }
  .prev-board-link:hover {
    opacity: 1;
    font-size: 50px;
  }
  .next-board-link:hover { 
    opacity: 1;
    font-size: 50px;
  }
  .prev-board-link.disabled, .next-board-link.disabled {
    pointer-events: none;
  }
</style>

<!-- コメント欄 !-->
<style>
.comment-wrapper {
  flex: 3;  /* コンテナの幅 */
  display: flex;
  flex-direction: column;
  height: 100%;
  border: 2px solid pink;
  padding-top: 10px;
}
.comment-area {
  position: relative;
  height: 400px; /* コンテナの高さ */
  overflow: hidden; /* コンテナ外のテキストを隠す */
  background-color: white;
  border: 5px solid white;
  
}
.comment-track {
  position: absolute;
  width: 100%;
  text-align: left;
  animation: slideDown var(--animation-duration) linear infinite;; /* 下に移動するアニメーション */
}
.comment-text {
  display: block;
  margin: 20px; /* 各コメント間のスペース */
  font-size: 20px;
  color: black;
}
.comment-image img {
  width: 100px;
}
.comment-link {
  text-decoration: none;
}
.comment-link:hover {
  font-weight: bold;
}
.comment_by_current_user.comment_by_board_user {
  background-color: rgb(239,255,74,0.5);
}
.comment_by_current_user {
  background-color: rgb(84,211,44, 0.5)  ;
}
.comment_by_board_user {
  background-color: rgb(239,255,74,0.5);
}

@keyframes slideDown {
  from {
    transform: translateY(var(--start-translate, -120%));
  }
  to {
    transform: translateY(var(--end-translate, -200px));
  }
}
</style>

<!-- コメント入力 -->
<style>
  .comment-form-wrapper {
    flex: 1;
    position: relative;
    border: 2px solid pink;
  }
  .comment-form textarea {
    position: absolute;
    height: 100%;
    padding-top: 60px;
    bottom: 0;
    resize: none;
    background-color: rgba(255, 192, 203, 0.2);
    font-size: 30px;
  }
  .comment-form input {
    color: white;
    background: pink;
    width: 100%;
    opacity: 0.6;
    height: 50px;
    font-size: 20px;
    font-weight: bold;
    border: none;
  }
  .comment-form input:hover {
    color: white;
    background: pink;
    opacity: 0.8;
  }
</style>

<style>
  .board-cards-title {
    text-align: center;
    background-color: pink;
  }
  .board-cards-title span:not(.user-name) {
    font-size: 40px;
    color: white;
  }
  .board-cards-title .user-name {
    font-size: 100%;
    max-width: 20%;
  }
  .board-cards {
    position: relative;
    display: flex;
    flex-wrap: wrap; /* 行をまたいで自動的に折り返す */
    gap: 6px; /* カード間のスペースを設定 */
    justify-content: space-between; /* 均等に配置 */
    padding-bottom: 150px;
    margin-top: 50px;
  }
  .users-other-boards {
  
  }
  .recommend-boards {
    margin-top: 100px;
  }
</style>

<!-- ページネーション -->
<style>
  .pagination-left {
    position: absolute;
    bottom: 0;
    left: 45%;
    font-size: 40px;
  }
  .pagination-right {
    position: absolute;
    bottom: 0;
    right: 45%;
    font-size: 40px;
  }
  .previous-link {
    font-size: 50px;
    opacity: 0;
    color: pink;
  }
  .next-link {
    font-size: 50px;
    opacity: 0;
    color: pink;
  }
  .previous-link:hover {
    font-size: 60px;
  }
  .next-link:hover { 
    font-size: 60px;
  }
  .previous-link.disabled, .next-link.disabled {
    pointer-events: none;
  }
  .board-cards:hover .prev-link:not(.disabled) {
    opacity: 1;
  }
  .board-cards:hover .next-link:not(.disabled) {
    opacity: 1;
  }
</style>
